// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VedioPara.proto

#include "VedioPara.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

//begin custom modify
#if defined(_MSC_VER)
#pragma warning(disable:4125)
#endif // _MSC_VER
//end custom modify
class Process3dRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Process3dRequest>
      _instance;
} _Process3dRequest_default_instance_;
class Point3DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3D>
      _instance;
} _Point3D_default_instance_;
class Point3DsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3Ds>
      _instance;
} _Point3Ds_default_instance_;
class Point3DssDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3Dss>
      _instance;
} _Point3Dss_default_instance_;
class Process3dReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Process3dReply>
      _instance;
} _Process3dReply_default_instance_;
class AnimationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Animation>
      _instance;
} _Animation_default_instance_;
class ExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression>
      _instance;
} _Expression_default_instance_;
class Process3dReplyOnedimDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Process3dReplyOnedim>
      _instance;
} _Process3dReplyOnedim_default_instance_;
namespace protobuf_VedioPara_2eproto {
void InitDefaultsProcess3dRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Process3dRequest_default_instance_;
    new (ptr) ::Process3dRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Process3dRequest::InitAsDefaultInstance();
}

void InitDefaultsProcess3dRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcess3dRequestImpl);
}

void InitDefaultsPoint3DImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Point3D_default_instance_;
    new (ptr) ::Point3D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Point3D::InitAsDefaultInstance();
}

void InitDefaultsPoint3D() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint3DImpl);
}

void InitDefaultsPoint3DsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_VedioPara_2eproto::InitDefaultsPoint3D();
  {
    void* ptr = &::_Point3Ds_default_instance_;
    new (ptr) ::Point3Ds();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Point3Ds::InitAsDefaultInstance();
}

void InitDefaultsPoint3Ds() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint3DsImpl);
}

void InitDefaultsPoint3DssImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_VedioPara_2eproto::InitDefaultsPoint3Ds();
  {
    void* ptr = &::_Point3Dss_default_instance_;
    new (ptr) ::Point3Dss();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Point3Dss::InitAsDefaultInstance();
}

void InitDefaultsPoint3Dss() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint3DssImpl);
}

void InitDefaultsProcess3dReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_VedioPara_2eproto::InitDefaultsPoint3Dss();
  {
    void* ptr = &::_Process3dReply_default_instance_;
    new (ptr) ::Process3dReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Process3dReply::InitAsDefaultInstance();
}

void InitDefaultsProcess3dReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcess3dReplyImpl);
}

void InitDefaultsAnimationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Animation_default_instance_;
    new (ptr) ::Animation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Animation::InitAsDefaultInstance();
}

void InitDefaultsAnimation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAnimationImpl);
}

void InitDefaultsExpressionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Expression_default_instance_;
    new (ptr) ::Expression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Expression::InitAsDefaultInstance();
}

void InitDefaultsExpression() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExpressionImpl);
}

void InitDefaultsProcess3dReplyOnedimImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_VedioPara_2eproto::InitDefaultsAnimation();
  protobuf_VedioPara_2eproto::InitDefaultsExpression();
  {
    void* ptr = &::_Process3dReplyOnedim_default_instance_;
    new (ptr) ::Process3dReplyOnedim();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Process3dReplyOnedim::InitAsDefaultInstance();
}

void InitDefaultsProcess3dReplyOnedim() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcess3dReplyOnedimImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dRequest, sample_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dRequest, wav_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dRequest, ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3D, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3D, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3Ds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3Ds, points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3Dss, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3Dss, points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReply, indpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReply, points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Animation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Animation, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Animation, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Expression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Expression, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Expression, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, indpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, audio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, animations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process3dReplyOnedim, expressions_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Process3dRequest)},
  { 8, -1, sizeof(::Point3D)},
  { 16, -1, sizeof(::Point3Ds)},
  { 22, -1, sizeof(::Point3Dss)},
  { 28, -1, sizeof(::Process3dReply)},
  { 36, -1, sizeof(::Animation)},
  { 43, -1, sizeof(::Expression)},
  { 50, -1, sizeof(::Process3dReplyOnedim)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Process3dRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Point3D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Point3Ds_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Point3Dss_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Process3dReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Animation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Expression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Process3dReplyOnedim_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "VedioPara.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017VedioPara.proto\"C\n\020Process3dRequest\022\023\n"
      "\013sample_rate\030\001 \001(\005\022\013\n\003wav\030\002 \001(\014\022\r\n\005ratio"
      "\030\003 \001(\002\"*\n\007Point3D\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022"
      "\t\n\001z\030\003 \001(\002\"$\n\010Point3Ds\022\030\n\006points\030\001 \003(\0132\010"
      ".Point3D\"&\n\tPoint3Dss\022\031\n\006points\030\001 \003(\0132\t."
      "Point3Ds\"M\n\016Process3dReply\022\014\n\004code\030\001 \001(\005"
      "\022\021\n\tindPoints\030\002 \003(\005\022\032\n\006points\030\003 \003(\0132\n.Po"
      "int3Dss\"\'\n\tAnimation\022\014\n\004time\030\001 \001(\002\022\014\n\004na"
      "me\030\002 \001(\t\"(\n\nExpression\022\014\n\004time\030\001 \001(\002\022\014\n\004"
      "name\030\002 \001(\t\"\272\001\n\024Process3dReplyOnedim\022\014\n\004c"
      "ode\030\001 \001(\005\022\021\n\tindPoints\030\002 \001(\014\022\016\n\006points\030\003"
      " \001(\014\022\r\n\005shape\030\004 \003(\005\022\r\n\005audio\030\005 \001(\t\022\021\n\tst"
      "artTime\030\006 \001(\002\022\036\n\nanimations\030\007 \003(\0132\n.Anim"
      "ation\022 \n\013expressions\030\010 \003(\0132\013.Expression2"
      "{\n\007Process\0221\n\tProcess3d\022\021.Process3dReque"
      "st\032\017.Process3dReply\"\000\022=\n\017Process3dOnedim"
      "\022\021.Process3dRequest\032\025.Process3dReplyOned"
      "im\"\000B\013Z\t.;dh_grpcb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 705);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "VedioPara.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_VedioPara_2eproto

// ===================================================================

void Process3dRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Process3dRequest::kSampleRateFieldNumber;
const int Process3dRequest::kWavFieldNumber;
const int Process3dRequest::kRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Process3dRequest::Process3dRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_VedioPara_2eproto::InitDefaultsProcess3dRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Process3dRequest)
}
Process3dRequest::Process3dRequest(const Process3dRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wav_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wav().size() > 0) {
    wav_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wav_);
  }
  ::memcpy(&sample_rate_, &from.sample_rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&ratio_) -
    reinterpret_cast<char*>(&sample_rate_)) + sizeof(ratio_));
  // @@protoc_insertion_point(copy_constructor:Process3dRequest)
}

void Process3dRequest::SharedCtor() {
  wav_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sample_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ratio_) -
      reinterpret_cast<char*>(&sample_rate_)) + sizeof(ratio_));
  _cached_size_ = 0;
}

Process3dRequest::~Process3dRequest() {
  // @@protoc_insertion_point(destructor:Process3dRequest)
  SharedDtor();
}

void Process3dRequest::SharedDtor() {
  wav_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Process3dRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process3dRequest::descriptor() {
  ::protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Process3dRequest& Process3dRequest::default_instance() {
  ::protobuf_VedioPara_2eproto::InitDefaultsProcess3dRequest();
  return *internal_default_instance();
}

Process3dRequest* Process3dRequest::New(::google::protobuf::Arena* arena) const {
  Process3dRequest* n = new Process3dRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Process3dRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Process3dRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wav_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sample_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ratio_) -
      reinterpret_cast<char*>(&sample_rate_)) + sizeof(ratio_));
  _internal_metadata_.Clear();
}

bool Process3dRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Process3dRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sample_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes wav = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_wav()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ratio = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Process3dRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Process3dRequest)
  return false;
#undef DO_
}

void Process3dRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Process3dRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sample_rate = 1;
  if (this->sample_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sample_rate(), output);
  }

  // bytes wav = 2;
  if (this->wav().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->wav(), output);
  }

  // float ratio = 3;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ratio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Process3dRequest)
}

::google::protobuf::uint8* Process3dRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Process3dRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sample_rate = 1;
  if (this->sample_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sample_rate(), target);
  }

  // bytes wav = 2;
  if (this->wav().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->wav(), target);
  }

  // float ratio = 3;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ratio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Process3dRequest)
  return target;
}

size_t Process3dRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Process3dRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes wav = 2;
  if (this->wav().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->wav());
  }

  // int32 sample_rate = 1;
  if (this->sample_rate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate());
  }

  // float ratio = 3;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process3dRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Process3dRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Process3dRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Process3dRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Process3dRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Process3dRequest)
    MergeFrom(*source);
  }
}

void Process3dRequest::MergeFrom(const Process3dRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Process3dRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wav().size() > 0) {

    wav_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wav_);
  }
  if (from.sample_rate() != 0) {
    set_sample_rate(from.sample_rate());
  }
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
}

void Process3dRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Process3dRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process3dRequest::CopyFrom(const Process3dRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Process3dRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process3dRequest::IsInitialized() const {
  return true;
}

void Process3dRequest::Swap(Process3dRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Process3dRequest::InternalSwap(Process3dRequest* other) {
  using std::swap;
  wav_.Swap(&other->wav_);
  swap(sample_rate_, other->sample_rate_);
  swap(ratio_, other->ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Process3dRequest::GetMetadata() const {
  protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3D::kXFieldNumber;
const int Point3D::kYFieldNumber;
const int Point3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3D::Point3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_VedioPara_2eproto::InitDefaultsPoint3D();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Point3D)
}
Point3D::Point3D(const Point3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:Point3D)
}

void Point3D::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:Point3D)
  SharedDtor();
}

void Point3D::SharedDtor() {
}

void Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3D::descriptor() {
  ::protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3D& Point3D::default_instance() {
  ::protobuf_VedioPara_2eproto::InitDefaultsPoint3D();
  return *internal_default_instance();
}

Point3D* Point3D::New(::google::protobuf::Arena* arena) const {
  Point3D* n = new Point3D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Point3D)
  return false;
#undef DO_
}

void Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Point3D)
}

::google::protobuf::uint8* Point3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Point3D)
  return target;
}

size_t Point3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Point3D)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Point3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Point3D)
    MergeFrom(*source);
  }
}

void Point3D::MergeFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Point3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D::IsInitialized() const {
  return true;
}

void Point3D::Swap(Point3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3D::InternalSwap(Point3D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3Ds::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3Ds::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3Ds::Point3Ds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_VedioPara_2eproto::InitDefaultsPoint3Ds();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Point3Ds)
}
Point3Ds::Point3Ds(const Point3Ds& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Point3Ds)
}

void Point3Ds::SharedCtor() {
  _cached_size_ = 0;
}

Point3Ds::~Point3Ds() {
  // @@protoc_insertion_point(destructor:Point3Ds)
  SharedDtor();
}

void Point3Ds::SharedDtor() {
}

void Point3Ds::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3Ds::descriptor() {
  ::protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3Ds& Point3Ds::default_instance() {
  ::protobuf_VedioPara_2eproto::InitDefaultsPoint3Ds();
  return *internal_default_instance();
}

Point3Ds* Point3Ds::New(::google::protobuf::Arena* arena) const {
  Point3Ds* n = new Point3Ds;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3Ds::Clear() {
// @@protoc_insertion_point(message_clear_start:Point3Ds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  _internal_metadata_.Clear();
}

bool Point3Ds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Point3Ds)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Point3D points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Point3Ds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Point3Ds)
  return false;
#undef DO_
}

void Point3Ds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Point3Ds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point3D points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Point3Ds)
}

::google::protobuf::uint8* Point3Ds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Point3Ds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point3D points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Point3Ds)
  return target;
}

size_t Point3Ds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Point3Ds)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Point3D points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3Ds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Point3Ds)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3Ds* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3Ds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Point3Ds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Point3Ds)
    MergeFrom(*source);
  }
}

void Point3Ds::MergeFrom(const Point3Ds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Point3Ds)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
}

void Point3Ds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Point3Ds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3Ds::CopyFrom(const Point3Ds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Point3Ds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3Ds::IsInitialized() const {
  return true;
}

void Point3Ds::Swap(Point3Ds* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3Ds::InternalSwap(Point3Ds* other) {
  using std::swap;
  points_.InternalSwap(&other->points_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3Ds::GetMetadata() const {
  protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3Dss::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3Dss::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3Dss::Point3Dss()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_VedioPara_2eproto::InitDefaultsPoint3Dss();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Point3Dss)
}
Point3Dss::Point3Dss(const Point3Dss& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Point3Dss)
}

void Point3Dss::SharedCtor() {
  _cached_size_ = 0;
}

Point3Dss::~Point3Dss() {
  // @@protoc_insertion_point(destructor:Point3Dss)
  SharedDtor();
}

void Point3Dss::SharedDtor() {
}

void Point3Dss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3Dss::descriptor() {
  ::protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3Dss& Point3Dss::default_instance() {
  ::protobuf_VedioPara_2eproto::InitDefaultsPoint3Dss();
  return *internal_default_instance();
}

Point3Dss* Point3Dss::New(::google::protobuf::Arena* arena) const {
  Point3Dss* n = new Point3Dss;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3Dss::Clear() {
// @@protoc_insertion_point(message_clear_start:Point3Dss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  _internal_metadata_.Clear();
}

bool Point3Dss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Point3Dss)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Point3Ds points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Point3Dss)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Point3Dss)
  return false;
#undef DO_
}

void Point3Dss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Point3Dss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point3Ds points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Point3Dss)
}

::google::protobuf::uint8* Point3Dss::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Point3Dss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point3Ds points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Point3Dss)
  return target;
}

size_t Point3Dss::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Point3Dss)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Point3Ds points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3Dss::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Point3Dss)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3Dss* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3Dss>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Point3Dss)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Point3Dss)
    MergeFrom(*source);
  }
}

void Point3Dss::MergeFrom(const Point3Dss& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Point3Dss)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
}

void Point3Dss::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Point3Dss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3Dss::CopyFrom(const Point3Dss& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Point3Dss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3Dss::IsInitialized() const {
  return true;
}

void Point3Dss::Swap(Point3Dss* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3Dss::InternalSwap(Point3Dss* other) {
  using std::swap;
  points_.InternalSwap(&other->points_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3Dss::GetMetadata() const {
  protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Process3dReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Process3dReply::kCodeFieldNumber;
const int Process3dReply::kIndPointsFieldNumber;
const int Process3dReply::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Process3dReply::Process3dReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_VedioPara_2eproto::InitDefaultsProcess3dReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Process3dReply)
}
Process3dReply::Process3dReply(const Process3dReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      indpoints_(from.indpoints_),
      points_(from.points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:Process3dReply)
}

void Process3dReply::SharedCtor() {
  code_ = 0;
  _cached_size_ = 0;
}

Process3dReply::~Process3dReply() {
  // @@protoc_insertion_point(destructor:Process3dReply)
  SharedDtor();
}

void Process3dReply::SharedDtor() {
}

void Process3dReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process3dReply::descriptor() {
  ::protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Process3dReply& Process3dReply::default_instance() {
  ::protobuf_VedioPara_2eproto::InitDefaultsProcess3dReply();
  return *internal_default_instance();
}

Process3dReply* Process3dReply::New(::google::protobuf::Arena* arena) const {
  Process3dReply* n = new Process3dReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Process3dReply::Clear() {
// @@protoc_insertion_point(message_clear_start:Process3dReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indpoints_.Clear();
  points_.Clear();
  code_ = 0;
  _internal_metadata_.Clear();
}

bool Process3dReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Process3dReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 indPoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_indpoints())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_indpoints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Point3Dss points = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Process3dReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Process3dReply)
  return false;
#undef DO_
}

void Process3dReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Process3dReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // repeated int32 indPoints = 2;
  if (this->indpoints_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _indpoints_cached_byte_size_));
  }
  for (int i = 0, n = this->indpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->indpoints(i), output);
  }

  // repeated .Point3Dss points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->points(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Process3dReply)
}

::google::protobuf::uint8* Process3dReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Process3dReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // repeated int32 indPoints = 2;
  if (this->indpoints_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _indpoints_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->indpoints_, target);
  }

  // repeated .Point3Dss points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Process3dReply)
  return target;
}

size_t Process3dReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Process3dReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 indPoints = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->indpoints_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _indpoints_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .Point3Dss points = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process3dReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Process3dReply)
  GOOGLE_DCHECK_NE(&from, this);
  const Process3dReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Process3dReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Process3dReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Process3dReply)
    MergeFrom(*source);
  }
}

void Process3dReply::MergeFrom(const Process3dReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Process3dReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indpoints_.MergeFrom(from.indpoints_);
  points_.MergeFrom(from.points_);
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Process3dReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Process3dReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process3dReply::CopyFrom(const Process3dReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Process3dReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process3dReply::IsInitialized() const {
  return true;
}

void Process3dReply::Swap(Process3dReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Process3dReply::InternalSwap(Process3dReply* other) {
  using std::swap;
  indpoints_.InternalSwap(&other->indpoints_);
  points_.InternalSwap(&other->points_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Process3dReply::GetMetadata() const {
  protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Animation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Animation::kTimeFieldNumber;
const int Animation::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Animation::Animation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_VedioPara_2eproto::InitDefaultsAnimation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Animation)
}
Animation::Animation(const Animation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:Animation)
}

void Animation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  _cached_size_ = 0;
}

Animation::~Animation() {
  // @@protoc_insertion_point(destructor:Animation)
  SharedDtor();
}

void Animation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Animation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Animation::descriptor() {
  ::protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Animation& Animation::default_instance() {
  ::protobuf_VedioPara_2eproto::InitDefaultsAnimation();
  return *internal_default_instance();
}

Animation* Animation::New(::google::protobuf::Arena* arena) const {
  Animation* n = new Animation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Animation::Clear() {
// @@protoc_insertion_point(message_clear_start:Animation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  _internal_metadata_.Clear();
}

bool Animation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Animation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Animation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Animation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Animation)
  return false;
#undef DO_
}

void Animation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Animation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->time(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Animation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Animation)
}

::google::protobuf::uint8* Animation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Animation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->time(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Animation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Animation)
  return target;
}

size_t Animation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Animation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // float time = 1;
  if (this->time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Animation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Animation)
  GOOGLE_DCHECK_NE(&from, this);
  const Animation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Animation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Animation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Animation)
    MergeFrom(*source);
  }
}

void Animation::MergeFrom(const Animation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Animation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void Animation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Animation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Animation::CopyFrom(const Animation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Animation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Animation::IsInitialized() const {
  return true;
}

void Animation::Swap(Animation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Animation::InternalSwap(Animation* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Animation::GetMetadata() const {
  protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression::kTimeFieldNumber;
const int Expression::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression::Expression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_VedioPara_2eproto::InitDefaultsExpression();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Expression)
}
Expression::Expression(const Expression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:Expression)
}

void Expression::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  _cached_size_ = 0;
}

Expression::~Expression() {
  // @@protoc_insertion_point(destructor:Expression)
  SharedDtor();
}

void Expression::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Expression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Expression::descriptor() {
  ::protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression& Expression::default_instance() {
  ::protobuf_VedioPara_2eproto::InitDefaultsExpression();
  return *internal_default_instance();
}

Expression* Expression::New(::google::protobuf::Arena* arena) const {
  Expression* n = new Expression;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Expression::Clear() {
// @@protoc_insertion_point(message_clear_start:Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  _internal_metadata_.Clear();
}

bool Expression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Expression)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Expression.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Expression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Expression)
  return false;
#undef DO_
}

void Expression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->time(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Expression.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Expression)
}

::google::protobuf::uint8* Expression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->time(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Expression.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Expression)
  return target;
}

size_t Expression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Expression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // float time = 1;
  if (this->time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Expression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Expression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Expression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Expression)
    MergeFrom(*source);
  }
}

void Expression::MergeFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Expression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void Expression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression::CopyFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression::IsInitialized() const {
  return true;
}

void Expression::Swap(Expression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression::InternalSwap(Expression* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Expression::GetMetadata() const {
  protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Process3dReplyOnedim::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Process3dReplyOnedim::kCodeFieldNumber;
const int Process3dReplyOnedim::kIndPointsFieldNumber;
const int Process3dReplyOnedim::kPointsFieldNumber;
const int Process3dReplyOnedim::kShapeFieldNumber;
const int Process3dReplyOnedim::kAudioFieldNumber;
const int Process3dReplyOnedim::kStartTimeFieldNumber;
const int Process3dReplyOnedim::kAnimationsFieldNumber;
const int Process3dReplyOnedim::kExpressionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Process3dReplyOnedim::Process3dReplyOnedim()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_VedioPara_2eproto::InitDefaultsProcess3dReplyOnedim();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Process3dReplyOnedim)
}
Process3dReplyOnedim::Process3dReplyOnedim(const Process3dReplyOnedim& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shape_(from.shape_),
      animations_(from.animations_),
      expressions_(from.expressions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  indpoints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.indpoints().size() > 0) {
    indpoints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.indpoints_);
  }
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.points().size() > 0) {
    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
  audio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio().size() > 0) {
    audio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&starttime_) -
    reinterpret_cast<char*>(&code_)) + sizeof(starttime_));
  // @@protoc_insertion_point(copy_constructor:Process3dReplyOnedim)
}

void Process3dReplyOnedim::SharedCtor() {
  indpoints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starttime_) -
      reinterpret_cast<char*>(&code_)) + sizeof(starttime_));
  _cached_size_ = 0;
}

Process3dReplyOnedim::~Process3dReplyOnedim() {
  // @@protoc_insertion_point(destructor:Process3dReplyOnedim)
  SharedDtor();
}

void Process3dReplyOnedim::SharedDtor() {
  indpoints_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  points_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Process3dReplyOnedim::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process3dReplyOnedim::descriptor() {
  ::protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Process3dReplyOnedim& Process3dReplyOnedim::default_instance() {
  ::protobuf_VedioPara_2eproto::InitDefaultsProcess3dReplyOnedim();
  return *internal_default_instance();
}

Process3dReplyOnedim* Process3dReplyOnedim::New(::google::protobuf::Arena* arena) const {
  Process3dReplyOnedim* n = new Process3dReplyOnedim;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Process3dReplyOnedim::Clear() {
// @@protoc_insertion_point(message_clear_start:Process3dReplyOnedim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  animations_.Clear();
  expressions_.Clear();
  indpoints_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  points_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starttime_) -
      reinterpret_cast<char*>(&code_)) + sizeof(starttime_));
  _internal_metadata_.Clear();
}

bool Process3dReplyOnedim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Process3dReplyOnedim)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes indPoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_indpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes points = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 shape = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_shape())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string audio = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio().data(), static_cast<int>(this->audio().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Process3dReplyOnedim.audio"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float startTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Animation animations = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_animations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Expression expressions = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_expressions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Process3dReplyOnedim)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Process3dReplyOnedim)
  return false;
#undef DO_
}

void Process3dReplyOnedim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Process3dReplyOnedim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // bytes indPoints = 2;
  if (this->indpoints().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->indpoints(), output);
  }

  // bytes points = 3;
  if (this->points().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->points(), output);
  }

  // repeated int32 shape = 4;
  if (this->shape_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _shape_cached_byte_size_));
  }
  for (int i = 0, n = this->shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->shape(i), output);
  }

  // string audio = 5;
  if (this->audio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio().data(), static_cast<int>(this->audio().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Process3dReplyOnedim.audio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->audio(), output);
  }

  // float startTime = 6;
  if (this->starttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->starttime(), output);
  }

  // repeated .Animation animations = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->animations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->animations(static_cast<int>(i)), output);
  }

  // repeated .Expression expressions = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->expressions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Process3dReplyOnedim)
}

::google::protobuf::uint8* Process3dReplyOnedim::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Process3dReplyOnedim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // bytes indPoints = 2;
  if (this->indpoints().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->indpoints(), target);
  }

  // bytes points = 3;
  if (this->points().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->points(), target);
  }

  // repeated int32 shape = 4;
  if (this->shape_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _shape_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->shape_, target);
  }

  // string audio = 5;
  if (this->audio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio().data(), static_cast<int>(this->audio().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Process3dReplyOnedim.audio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->audio(), target);
  }

  // float startTime = 6;
  if (this->starttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->starttime(), target);
  }

  // repeated .Animation animations = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->animations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->animations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Expression expressions = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->expressions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Process3dReplyOnedim)
  return target;
}

size_t Process3dReplyOnedim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Process3dReplyOnedim)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 shape = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _shape_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .Animation animations = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->animations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->animations(static_cast<int>(i)));
    }
  }

  // repeated .Expression expressions = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->expressions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->expressions(static_cast<int>(i)));
    }
  }

  // bytes indPoints = 2;
  if (this->indpoints().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->indpoints());
  }

  // bytes points = 3;
  if (this->points().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->points());
  }

  // string audio = 5;
  if (this->audio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // float startTime = 6;
  if (this->starttime() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process3dReplyOnedim::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Process3dReplyOnedim)
  GOOGLE_DCHECK_NE(&from, this);
  const Process3dReplyOnedim* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Process3dReplyOnedim>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Process3dReplyOnedim)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Process3dReplyOnedim)
    MergeFrom(*source);
  }
}

void Process3dReplyOnedim::MergeFrom(const Process3dReplyOnedim& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Process3dReplyOnedim)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  animations_.MergeFrom(from.animations_);
  expressions_.MergeFrom(from.expressions_);
  if (from.indpoints().size() > 0) {

    indpoints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.indpoints_);
  }
  if (from.points().size() > 0) {

    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
  if (from.audio().size() > 0) {

    audio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.starttime() != 0) {
    set_starttime(from.starttime());
  }
}

void Process3dReplyOnedim::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Process3dReplyOnedim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process3dReplyOnedim::CopyFrom(const Process3dReplyOnedim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Process3dReplyOnedim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process3dReplyOnedim::IsInitialized() const {
  return true;
}

void Process3dReplyOnedim::Swap(Process3dReplyOnedim* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Process3dReplyOnedim::InternalSwap(Process3dReplyOnedim* other) {
  using std::swap;
  shape_.InternalSwap(&other->shape_);
  animations_.InternalSwap(&other->animations_);
  expressions_.InternalSwap(&other->expressions_);
  indpoints_.Swap(&other->indpoints_);
  points_.Swap(&other->points_);
  audio_.Swap(&other->audio_);
  swap(code_, other->code_);
  swap(starttime_, other->starttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Process3dReplyOnedim::GetMetadata() const {
  protobuf_VedioPara_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_VedioPara_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
